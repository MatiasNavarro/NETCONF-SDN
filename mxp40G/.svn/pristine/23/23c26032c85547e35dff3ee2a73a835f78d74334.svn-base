/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef TXPDSPCOMPENSATIONTABLE_H
#define TXPDSPCOMPENSATIONTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(FTNC-MIB)
config_require(FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_interface)
config_require(FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_data_access)
config_require(FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_data_get)
config_require(FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for txpDSPCompensationTable */
#include "FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_oids.h"

/* enum definions */
#include "FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_txpDSPCompensationTable(void);
void shutdown_txpDSPCompensationTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table txpDSPCompensationTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::txpDSPCompensationTable is subid 3 of txpDSP.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.2.9.3.3, length: 11
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review txpDSPCompensationTable registration context.
     */
typedef netsnmp_data_list txpDSPCompensationTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review txpDSPCompensationTable data context structure.
 * This structure is used to represent the data for txpDSPCompensationTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * txpDSPCompensationTable.
 */
typedef struct txpDSPCompensationTable_data_s {
    
        /*
         * minBulkCDCompensation(2)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   minBulkCDCompensation[65535];
size_t      minBulkCDCompensation_len; /* # of char elements, not bytes */
    
        /*
         * maxBulkCDCompensation(3)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   maxBulkCDCompensation[65535];
size_t      maxBulkCDCompensation_len; /* # of char elements, not bytes */
    
        /*
         * stepSize(4)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   stepSize[65535];
size_t      stepSize_len; /* # of char elements, not bytes */
    
        /*
         * cdCompensation(5)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   cdCompensation[65535];
size_t      cdCompensation_len; /* # of char elements, not bytes */
    
} txpDSPCompensationTable_data;


/*
 * TODO:120:r: |-> Review txpDSPCompensationTable mib index.
 * This structure is used to represent the index for txpDSPCompensationTable.
 */
typedef struct txpDSPCompensationTable_mib_index_s {

        /*
         * txpDSPCompensationIndex(1)/OCTETSTR/ASN_OCTET_STR/char(char)//L/a/w/e/R/d/h
         */
   char   txpDSPCompensationIndex[32];
   size_t      txpDSPCompensationIndex_len;


} txpDSPCompensationTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review txpDSPCompensationTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(11)
*/
#define MAX_txpDSPCompensationTable_IDX_LEN     33


/* *********************************************************************
 * TODO:130:o: |-> Review txpDSPCompensationTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * txpDSPCompensationTable_rowreq_ctx pointer.
 */
typedef struct txpDSPCompensationTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_txpDSPCompensationTable_IDX_LEN];
    
    txpDSPCompensationTable_mib_index        tbl_idx;
    
    txpDSPCompensationTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to txpDSPCompensationTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *txpDSPCompensationTable_data_list;

} txpDSPCompensationTable_rowreq_ctx;

typedef struct txpDSPCompensationTable_ref_rowreq_ctx_s {
    txpDSPCompensationTable_rowreq_ctx *rowreq_ctx;
} txpDSPCompensationTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int txpDSPCompensationTable_pre_request(txpDSPCompensationTable_registration * user_context);
    int txpDSPCompensationTable_post_request(txpDSPCompensationTable_registration * user_context,
        int rc);

    int txpDSPCompensationTable_rowreq_ctx_init(txpDSPCompensationTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void txpDSPCompensationTable_rowreq_ctx_cleanup(txpDSPCompensationTable_rowreq_ctx *rowreq_ctx);


    txpDSPCompensationTable_rowreq_ctx *
                  txpDSPCompensationTable_row_find_by_mib_index(txpDSPCompensationTable_mib_index *mib_idx);

extern const oid txpDSPCompensationTable_oid[];
extern const int txpDSPCompensationTable_oid_size;


#include "FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_interface.h"
#include "FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_data_access.h"
#include "FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_data_get.h"
#include "FTNC-MIB/txpDSPCompensationTable/txpDSPCompensationTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* TXPDSPCOMPENSATIONTABLE_H */
/** @} */
