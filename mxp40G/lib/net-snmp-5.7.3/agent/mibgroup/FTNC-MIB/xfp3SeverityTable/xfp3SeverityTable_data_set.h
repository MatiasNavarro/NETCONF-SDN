/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $ 
 *
 * $Id:$
 */
#ifndef XFP3SEVERITYTABLE_DATA_SET_H
#define XFP3SEVERITYTABLE_DATA_SET_H

#ifdef __cplusplus
extern "C" {
#endif

/* *********************************************************************
 * SET function declarations
 */

/* *********************************************************************
 * SET Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table xfp3SeverityTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::xfp3SeverityTable is subid 3 of xfpAlarms.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.1.1.3.5.3, length: 12
*/


int xfp3SeverityTable_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp3SeverityTable_undo_cleanup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp3SeverityTable_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp3SeverityTable_commit( xfp3SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp3SeverityTable_undo_commit( xfp3SeverityTable_rowreq_ctx *rowreq_ctx);


int xfp3SeverityPresence_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityPresence_val);
int xfp3SeverityPresence_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityPresence_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityPresence_val );
int xfp3SeverityPresence_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityRxLoss_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityRxLoss_val);
int xfp3SeverityRxLoss_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityRxLoss_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityRxLoss_val );
int xfp3SeverityRxLoss_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityReady_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityReady_val);
int xfp3SeverityReady_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityReady_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityReady_val );
int xfp3SeverityReady_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityTxPower_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityTxPower_val);
int xfp3SeverityTxPower_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityTxPower_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityTxPower_val );
int xfp3SeverityTxPower_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityRxPower_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityRxPower_val);
int xfp3SeverityRxPower_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityRxPower_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityRxPower_val );
int xfp3SeverityRxPower_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityTemperature_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityTemperature_val);
int xfp3SeverityTemperature_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityTemperature_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityTemperature_val );
int xfp3SeverityTemperature_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityLowTxPower_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityLowTxPower_val);
int xfp3SeverityLowTxPower_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityLowTxPower_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityLowTxPower_val );
int xfp3SeverityLowTxPower_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityHighTxPower_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityHighTxPower_val);
int xfp3SeverityHighTxPower_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityHighTxPower_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityHighTxPower_val );
int xfp3SeverityHighTxPower_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityLowRxPower_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityLowRxPower_val);
int xfp3SeverityLowRxPower_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityLowRxPower_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityLowRxPower_val );
int xfp3SeverityLowRxPower_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityHighRxPower_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityHighRxPower_val);
int xfp3SeverityHighRxPower_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityHighRxPower_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityHighRxPower_val );
int xfp3SeverityHighRxPower_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityRxCdrLossOfLock_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityRxCdrLossOfLock_val);
int xfp3SeverityRxCdrLossOfLock_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityRxCdrLossOfLock_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityRxCdrLossOfLock_val );
int xfp3SeverityRxCdrLossOfLock_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityTxCdrLossOfLock_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityTxCdrLossOfLock_val);
int xfp3SeverityTxCdrLossOfLock_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityTxCdrLossOfLock_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityTxCdrLossOfLock_val );
int xfp3SeverityTxCdrLossOfLock_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp3SeverityLaserFault_check_value( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityLaserFault_val);
int xfp3SeverityLaserFault_undo_setup( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp3SeverityLaserFault_set( xfp3SeverityTable_rowreq_ctx *rowreq_ctx, long xfp3SeverityLaserFault_val );
int xfp3SeverityLaserFault_undo( xfp3SeverityTable_rowreq_ctx *rowreq_ctx );


int xfp3SeverityTable_check_dependencies(xfp3SeverityTable_rowreq_ctx *ctx);

void setXfp3Severity(char *alarm, long severity_value);

#ifdef __cplusplus
}
#endif

#endif /* XFP3SEVERITYTABLE_DATA_SET_H */
