/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef TXPTEMPTABLE_H
#define TXPTEMPTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(FTNC-MIB)
config_require(FTNC-MIB/txpTempTable/txpTempTable_interface)
config_require(FTNC-MIB/txpTempTable/txpTempTable_data_access)
config_require(FTNC-MIB/txpTempTable/txpTempTable_data_get)
config_require(FTNC-MIB/txpTempTable/txpTempTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for txpTempTable */
#include "FTNC-MIB/txpTempTable/txpTempTable_oids.h"

/* enum definions */
#include "FTNC-MIB/txpTempTable/txpTempTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_txpTempTable(void);
void shutdown_txpTempTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table txpTempTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::txpTempTable is subid 1 of txpMiscellaneous.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.2.9.2.1, length: 11
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review txpTempTable registration context.
     */
typedef netsnmp_data_list txpTempTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review txpTempTable data context structure.
 * This structure is used to represent the data for txpTempTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * txpTempTable.
 */
typedef struct txpTempTable_data_s {
    
        /*
         * txpTempAround(2)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTempAround[65535];
size_t      txpTempAround_len; /* # of char elements, not bytes */
    
        /*
         * txpTempCase(3)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTempCase[65535];
size_t      txpTempCase_len; /* # of char elements, not bytes */
    
        /*
         * txpTempTxLaser(4)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTempTxLaser[65535];
size_t      txpTempTxLaser_len; /* # of char elements, not bytes */
    
        /*
         * txpTempRxLaser(5)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTempRxLaser[65535];
size_t      txpTempRxLaser_len; /* # of char elements, not bytes */
    
} txpTempTable_data;


/*
 * TODO:120:r: |-> Review txpTempTable mib index.
 * This structure is used to represent the index for txpTempTable.
 */
typedef struct txpTempTable_mib_index_s {

        /*
         * txpTempIndex(1)/OCTETSTR/ASN_OCTET_STR/char(char)//L/a/w/e/R/d/h
         */
   char   txpTempIndex[32];
   size_t      txpTempIndex_len;


} txpTempTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review txpTempTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(11)
*/
#define MAX_txpTempTable_IDX_LEN     33


/* *********************************************************************
 * TODO:130:o: |-> Review txpTempTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * txpTempTable_rowreq_ctx pointer.
 */
typedef struct txpTempTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_txpTempTable_IDX_LEN];
    
    txpTempTable_mib_index        tbl_idx;
    
    txpTempTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to txpTempTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *txpTempTable_data_list;

} txpTempTable_rowreq_ctx;

typedef struct txpTempTable_ref_rowreq_ctx_s {
    txpTempTable_rowreq_ctx *rowreq_ctx;
} txpTempTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int txpTempTable_pre_request(txpTempTable_registration * user_context);
    int txpTempTable_post_request(txpTempTable_registration * user_context,
        int rc);

    int txpTempTable_rowreq_ctx_init(txpTempTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void txpTempTable_rowreq_ctx_cleanup(txpTempTable_rowreq_ctx *rowreq_ctx);


    txpTempTable_rowreq_ctx *
                  txpTempTable_row_find_by_mib_index(txpTempTable_mib_index *mib_idx);

extern const oid txpTempTable_oid[];
extern const int txpTempTable_oid_size;


#include "FTNC-MIB/txpTempTable/txpTempTable_interface.h"
#include "FTNC-MIB/txpTempTable/txpTempTable_data_access.h"
#include "FTNC-MIB/txpTempTable/txpTempTable_data_get.h"
#include "FTNC-MIB/txpTempTable/txpTempTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* TXPTEMPTABLE_H */
/** @} */
