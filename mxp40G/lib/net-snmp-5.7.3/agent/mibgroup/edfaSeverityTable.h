/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef EDFASEVERITYTABLE_H
#define EDFASEVERITYTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(FTNC-MIB)
config_require(FTNC-MIB/edfaSeverityTable/edfaSeverityTable_interface)
config_require(FTNC-MIB/edfaSeverityTable/edfaSeverityTable_data_access)
config_require(FTNC-MIB/edfaSeverityTable/edfaSeverityTable_data_get)
config_require(FTNC-MIB/edfaSeverityTable/edfaSeverityTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for edfaSeverityTable */
#include "FTNC-MIB/edfaSeverityTable/edfaSeverityTable_oids.h"

/* enum definions */
#include "FTNC-MIB/edfaSeverityTable/edfaSeverityTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_edfaSeverityTable(void);
void shutdown_edfaSeverityTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table edfaSeverityTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::edfaSeverityTable is subid 1 of edfaAlarms.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.1.1.3.3.1, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review edfaSeverityTable registration context.
     */
typedef netsnmp_data_list edfaSeverityTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review edfaSeverityTable data context structure.
 * This structure is used to represent the data for edfaSeverityTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * edfaSeverityTable.
 */
typedef struct edfaSeverityTable_data_s {
    
        /*
         * edfaSeverityAmpStatus(2)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   edfaSeverityAmpStatus;
    
        /*
         * edfaSeverityInputPower(3)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   edfaSeverityInputPower;
    
        /*
         * edfaSeverityLop(4)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   edfaSeverityLop;
    
        /*
         * edfaSeverityLos(5)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   edfaSeverityLos;
    
        /*
         * edfaSeverityOutputPower(6)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   edfaSeverityOutputPower;
    
        /*
         * edfaSeverityTemperature(7)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   edfaSeverityTemperature;
    
} edfaSeverityTable_data;


/* *********************************************************************
 * TODO:115:o: |-> Review edfaSeverityTable undo context.
 * We're just going to use the same data structure for our
 * undo_context. If you want to do something more efficent,
 * define your typedef here.
 */
typedef edfaSeverityTable_data edfaSeverityTable_undo_data;

/*
 * TODO:120:r: |-> Review edfaSeverityTable mib index.
 * This structure is used to represent the index for edfaSeverityTable.
 */
typedef struct edfaSeverityTable_mib_index_s {

        /*
         * edfaSeverityIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/a/w/e/R/d/h
         */
   long   edfaSeverityIndex;


} edfaSeverityTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review edfaSeverityTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_edfaSeverityTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review edfaSeverityTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * edfaSeverityTable_rowreq_ctx pointer.
 */
typedef struct edfaSeverityTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_edfaSeverityTable_IDX_LEN];
    
    edfaSeverityTable_mib_index        tbl_idx;
    
    edfaSeverityTable_data              data;
    edfaSeverityTable_undo_data       * undo;
    unsigned int                column_set_flags; /* flags for set columns */


    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to edfaSeverityTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *edfaSeverityTable_data_list;

} edfaSeverityTable_rowreq_ctx;

typedef struct edfaSeverityTable_ref_rowreq_ctx_s {
    edfaSeverityTable_rowreq_ctx *rowreq_ctx;
} edfaSeverityTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int edfaSeverityTable_pre_request(edfaSeverityTable_registration * user_context);
    int edfaSeverityTable_post_request(edfaSeverityTable_registration * user_context,
        int rc);

    int edfaSeverityTable_rowreq_ctx_init(edfaSeverityTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void edfaSeverityTable_rowreq_ctx_cleanup(edfaSeverityTable_rowreq_ctx *rowreq_ctx);

    int edfaSeverityTable_commit(edfaSeverityTable_rowreq_ctx * rowreq_ctx);

    edfaSeverityTable_rowreq_ctx *
                  edfaSeverityTable_row_find_by_mib_index(edfaSeverityTable_mib_index *mib_idx);

extern const oid edfaSeverityTable_oid[];
extern const int edfaSeverityTable_oid_size;


#include "FTNC-MIB/edfaSeverityTable/edfaSeverityTable_interface.h"
#include "FTNC-MIB/edfaSeverityTable/edfaSeverityTable_data_access.h"
#include "FTNC-MIB/edfaSeverityTable/edfaSeverityTable_data_get.h"
#include "FTNC-MIB/edfaSeverityTable/edfaSeverityTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* EDFASEVERITYTABLE_H */
/** @} */
