/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef XFP3SEVERITYTABLE_H
#define XFP3SEVERITYTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(FTNC-MIB)
config_require(FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_interface)
config_require(FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_data_access)
config_require(FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_data_get)
config_require(FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for xfp3SeverityTable */
#include "FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_oids.h"

/* enum definions */
#include "FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_xfp3SeverityTable(void);
void shutdown_xfp3SeverityTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table xfp3SeverityTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::xfp3SeverityTable is subid 3 of xfpAlarms.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.1.1.3.5.3, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review xfp3SeverityTable registration context.
     */
typedef netsnmp_data_list xfp3SeverityTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review xfp3SeverityTable data context structure.
 * This structure is used to represent the data for xfp3SeverityTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * xfp3SeverityTable.
 */
typedef struct xfp3SeverityTable_data_s {
    
        /*
         * xfp3SeverityPresence(2)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityPresence;
    
        /*
         * xfp3SeverityRxLoss(3)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityRxLoss;
    
        /*
         * xfp3SeverityReady(4)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityReady;
    
        /*
         * xfp3SeverityTxPower(5)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityTxPower;
    
        /*
         * xfp3SeverityRxPower(6)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityRxPower;
    
        /*
         * xfp3SeverityTemperature(7)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityTemperature;
    
        /*
         * xfp3SeverityLowTxPower(8)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityLowTxPower;
    
        /*
         * xfp3SeverityHighTxPower(9)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityHighTxPower;
    
        /*
         * xfp3SeverityLowRxPower(10)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityLowRxPower;
    
        /*
         * xfp3SeverityHighRxPower(11)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityHighRxPower;
    
        /*
         * xfp3SeverityRxCdrLossOfLock(12)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityRxCdrLossOfLock;
    
        /*
         * xfp3SeverityTxCdrLossOfLock(13)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityTxCdrLossOfLock;
    
        /*
         * xfp3SeverityLaserFault(14)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
   long   xfp3SeverityLaserFault;
    
} xfp3SeverityTable_data;


/* *********************************************************************
 * TODO:115:o: |-> Review xfp3SeverityTable undo context.
 * We're just going to use the same data structure for our
 * undo_context. If you want to do something more efficent,
 * define your typedef here.
 */
typedef xfp3SeverityTable_data xfp3SeverityTable_undo_data;

/*
 * TODO:120:r: |-> Review xfp3SeverityTable mib index.
 * This structure is used to represent the index for xfp3SeverityTable.
 */
typedef struct xfp3SeverityTable_mib_index_s {

        /*
         * xfp3SeverityIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/a/w/e/R/d/h
         */
   long   xfp3SeverityIndex;


} xfp3SeverityTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review xfp3SeverityTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_xfp3SeverityTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review xfp3SeverityTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * xfp3SeverityTable_rowreq_ctx pointer.
 */
typedef struct xfp3SeverityTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_xfp3SeverityTable_IDX_LEN];
    
    xfp3SeverityTable_mib_index        tbl_idx;
    
    xfp3SeverityTable_data              data;
    xfp3SeverityTable_undo_data       * undo;
    unsigned int                column_set_flags; /* flags for set columns */


    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to xfp3SeverityTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *xfp3SeverityTable_data_list;

} xfp3SeverityTable_rowreq_ctx;

typedef struct xfp3SeverityTable_ref_rowreq_ctx_s {
    xfp3SeverityTable_rowreq_ctx *rowreq_ctx;
} xfp3SeverityTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int xfp3SeverityTable_pre_request(xfp3SeverityTable_registration * user_context);
    int xfp3SeverityTable_post_request(xfp3SeverityTable_registration * user_context,
        int rc);

    int xfp3SeverityTable_rowreq_ctx_init(xfp3SeverityTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void xfp3SeverityTable_rowreq_ctx_cleanup(xfp3SeverityTable_rowreq_ctx *rowreq_ctx);

    int xfp3SeverityTable_commit(xfp3SeverityTable_rowreq_ctx * rowreq_ctx);

    xfp3SeverityTable_rowreq_ctx *
                  xfp3SeverityTable_row_find_by_mib_index(xfp3SeverityTable_mib_index *mib_idx);

extern const oid xfp3SeverityTable_oid[];
extern const int xfp3SeverityTable_oid_size;


#include "FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_interface.h"
#include "FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_data_access.h"
#include "FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_data_get.h"
#include "FTNC-MIB/xfp3SeverityTable/xfp3SeverityTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* XFP3SEVERITYTABLE_H */
/** @} */
