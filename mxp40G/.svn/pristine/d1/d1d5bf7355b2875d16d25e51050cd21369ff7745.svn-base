# NETSNMP TEST
# 
# Establish a session with remote agent and send basic netsnmp get, set and walk
# commands
# author: pmartinez
# Fotonica Team
# date:   5 ene 17
#
import os
from easysnmp import Session

def set_environ():
	# Make MIBs available for net-snmp tools
	self_path = os.path.dirname(os.path.abspath( __file__ ))
	project   = self_path[0:self_path.find("tools")] #Get current project path

	os.environ["MIBDIRS"] = os.path.join(project, 'lib/net-snmp-5.7.3/mibs')
	os.environ["MIBS"] = 'ALL'

# Each returned item can be used normally as its related type (str or int)
# but also has several extended attributes with SNMP-specific information
def print_table(table):
	for item in table:
	    print '{oid}.{oid_index} {snmp_type} = {value}'.format(
	        oid=item.oid,
	        oid_index=item.oid_index,
	        snmp_type=item.snmp_type,
	        value=item.value
	    )

def walkall(session):
	return session.walk('.1.3.6.1.4.1.43484')

def walkintense(session, step=0):
	
	if not step:
		i=0
		while True:
			i += 1
			print 'step ', i
			top = session.walk('.1.3.6.1.4.1.43484')
			print_table(top)

	for i in range(0,step):
		print 'step ', i, 'from ', step
		top = session.walk('.1.3.6.1.4.1.43484')
		print_table(top)

def testset(session):
	# session.get()  # read 0
	# session.set(1) # set 1
	# session.get()  # read1
	pass
 

if __name__ == '__main__':
	set_environ()

	# Create an SNMP session to be used for all our requests
	# if cannot connect to remote agent:
	# easysnmp.exceptions.EasySNMPTimeoutError: timed out while connecting to
	# remote host
	session = Session(hostname='172.16.178',
				remote_port=7000,
				community='private',
				version=2
				)

	print session.walk('powera')
	#system_items = session.walk('.1.3.6.1.4.1.43484.1.1.1.2.8')
	#system_items = session.walk('FTNC-MIB::edfaTable')
	#print_table(system_items)

	#top = walkall(session)
	#print_table(top)

	walkintense(session)

# tpClient4SeveritySecmonLom.1 INTEGER = 1
# step  35
# Traceback (most recent call last):
#   File "../../../workspace/mxp_head/tools/netsnmp/snmp_test.py", line 77, in <module>
#     walkintense(session)
#   File "../../../workspace/mxp_head/tools/netsnmp/snmp_test.py", line 41, in walkintense
#     top = session.walk('.1.3.6.1.4.1.43484')
#   File "/usr/local/lib/python2.7/dist-packages/easysnmp/session.py", line 467, in walk
#     interface.walk(self, varlist)
# easysnmp.exceptions.EasySNMPTimeoutError: timed out while connecting to remote host
