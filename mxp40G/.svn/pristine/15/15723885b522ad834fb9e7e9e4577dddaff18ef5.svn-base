/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $ 
 *
 * $Id:$
 */
#ifndef XFP2SEVERITYTABLE_DATA_SET_H
#define XFP2SEVERITYTABLE_DATA_SET_H

#ifdef __cplusplus
extern "C" {
#endif

/* *********************************************************************
 * SET function declarations
 */

/* *********************************************************************
 * SET Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table xfp2SeverityTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::xfp2SeverityTable is subid 2 of xfpAlarms.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.1.1.3.5.2, length: 12
*/


int xfp2SeverityTable_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp2SeverityTable_undo_cleanup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp2SeverityTable_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp2SeverityTable_commit( xfp2SeverityTable_rowreq_ctx *rowreq_ctx);
int xfp2SeverityTable_undo_commit( xfp2SeverityTable_rowreq_ctx *rowreq_ctx);


int xfp2SeverityPresence_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityPresence_val);
int xfp2SeverityPresence_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityPresence_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityPresence_val );
int xfp2SeverityPresence_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityRxLoss_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityRxLoss_val);
int xfp2SeverityRxLoss_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityRxLoss_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityRxLoss_val );
int xfp2SeverityRxLoss_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityReady_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityReady_val);
int xfp2SeverityReady_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityReady_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityReady_val );
int xfp2SeverityReady_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityTxPower_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityTxPower_val);
int xfp2SeverityTxPower_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityTxPower_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityTxPower_val );
int xfp2SeverityTxPower_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityRxPower_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityRxPower_val);
int xfp2SeverityRxPower_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityRxPower_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityRxPower_val );
int xfp2SeverityRxPower_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityTemperature_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityTemperature_val);
int xfp2SeverityTemperature_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityTemperature_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityTemperature_val );
int xfp2SeverityTemperature_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityLowTxPower_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityLowTxPower_val);
int xfp2SeverityLowTxPower_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityLowTxPower_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityLowTxPower_val );
int xfp2SeverityLowTxPower_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityHighTxPower_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityHighTxPower_val);
int xfp2SeverityHighTxPower_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityHighTxPower_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityHighTxPower_val );
int xfp2SeverityHighTxPower_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityLowRxPower_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityLowRxPower_val);
int xfp2SeverityLowRxPower_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityLowRxPower_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityLowRxPower_val );
int xfp2SeverityLowRxPower_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityHighRxPower_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityHighRxPower_val);
int xfp2SeverityHighRxPower_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityHighRxPower_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityHighRxPower_val );
int xfp2SeverityHighRxPower_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityRxCdrLossOfLock_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityRxCdrLossOfLock_val);
int xfp2SeverityRxCdrLossOfLock_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityRxCdrLossOfLock_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityRxCdrLossOfLock_val );
int xfp2SeverityRxCdrLossOfLock_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityTxCdrLossOfLock_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityTxCdrLossOfLock_val);
int xfp2SeverityTxCdrLossOfLock_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityTxCdrLossOfLock_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityTxCdrLossOfLock_val );
int xfp2SeverityTxCdrLossOfLock_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityLaserFault_check_value( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityLaserFault_val);
int xfp2SeverityLaserFault_undo_setup( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );
int xfp2SeverityLaserFault_set( xfp2SeverityTable_rowreq_ctx *rowreq_ctx, long xfp2SeverityLaserFault_val );
int xfp2SeverityLaserFault_undo( xfp2SeverityTable_rowreq_ctx *rowreq_ctx );

int xfp2SeverityTable_check_dependencies(xfp2SeverityTable_rowreq_ctx *ctx);

void setXfp2Severity(char *alarm, long severity_value);

#ifdef __cplusplus
}
#endif

#endif /* XFP2SEVERITYTABLE_DATA_SET_H */
