/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef TXPALRMTXTABLE_H
#define TXPALRMTXTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(FTNC-MIB)
config_require(FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_interface)
config_require(FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_data_access)
config_require(FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_data_get)
config_require(FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for txpAlrmTxTable */
#include "FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_oids.h"

/* enum definions */
#include "FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_txpAlrmTxTable(void);
void shutdown_txpAlrmTxTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table txpAlrmTxTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::txpAlrmTxTable is subid 1 of txpAlrm.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.2.9.1.1, length: 11
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review txpAlrmTxTable registration context.
     */
typedef netsnmp_data_list txpAlrmTxTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review txpAlrmTxTable data context structure.
 * This structure is used to represent the data for txpAlrmTxTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * txpAlrmTxTable.
 */
typedef struct txpAlrmTxTable_data_s {
    
        /*
         * txpEOLALM(2)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpEOLALM[65535];
size_t      txpEOLALM_len; /* # of char elements, not bytes */
    
        /*
         * txpModTEMPALM(3)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpModTEMPALM[65535];
size_t      txpModTEMPALM_len; /* # of char elements, not bytes */
    
        /*
         * txpTxOOA(4)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTxOOA[65535];
size_t      txpTxOOA_len; /* # of char elements, not bytes */
    
        /*
         * txpTxLOFALM(5)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTxLOFALM[65535];
size_t      txpTxLOFALM_len; /* # of char elements, not bytes */
    
        /*
         * txpTxDSCERR(6)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTxDSCERR[65535];
size_t      txpTxDSCERR_len; /* # of char elements, not bytes */
    
        /*
         * txpLsWAVALM(7)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpLsWAVALM[65535];
size_t      txpLsWAVALM_len; /* # of char elements, not bytes */
    
        /*
         * txpTxALMINT(8)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTxALMINT[65535];
size_t      txpTxALMINT_len; /* # of char elements, not bytes */
    
        /*
         * txpLsBIASALM(9)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpLsBIASALM[65535];
size_t      txpLsBIASALM_len; /* # of char elements, not bytes */
    
        /*
         * txpLsTEMPALM(10)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpLsTEMPALM[65535];
size_t      txpLsTEMPALM_len; /* # of char elements, not bytes */
    
        /*
         * txpTxLOCKERR(11)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpTxLOCKERR[65535];
size_t      txpTxLOCKERR_len; /* # of char elements, not bytes */
    
        /*
         * txpLsPOWALM(12)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpLsPOWALM[65535];
size_t      txpLsPOWALM_len; /* # of char elements, not bytes */
    
        /*
         * txpModBIASALM(13)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpModBIASALM[65535];
size_t      txpModBIASALM_len; /* # of char elements, not bytes */
    
        /*
         * txpLATCHEDTxFIFOERR(14)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
         */
   char   txpLATCHEDTxFIFOERR[65535];
size_t      txpLATCHEDTxFIFOERR_len; /* # of char elements, not bytes */
    
} txpAlrmTxTable_data;


/*
 * TODO:120:r: |-> Review txpAlrmTxTable mib index.
 * This structure is used to represent the index for txpAlrmTxTable.
 */
typedef struct txpAlrmTxTable_mib_index_s {

        /*
         * txpAlrmTxIndex(1)/OCTETSTR/ASN_OCTET_STR/char(char)//L/a/w/e/R/d/h
         */
   char   txpAlrmTxIndex[32];
   size_t      txpAlrmTxIndex_len;


} txpAlrmTxTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review txpAlrmTxTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(11)
*/
#define MAX_txpAlrmTxTable_IDX_LEN     33


/* *********************************************************************
 * TODO:130:o: |-> Review txpAlrmTxTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * txpAlrmTxTable_rowreq_ctx pointer.
 */
typedef struct txpAlrmTxTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_txpAlrmTxTable_IDX_LEN];
    
    txpAlrmTxTable_mib_index        tbl_idx;
    
    txpAlrmTxTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to txpAlrmTxTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *txpAlrmTxTable_data_list;

} txpAlrmTxTable_rowreq_ctx;

typedef struct txpAlrmTxTable_ref_rowreq_ctx_s {
    txpAlrmTxTable_rowreq_ctx *rowreq_ctx;
} txpAlrmTxTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int txpAlrmTxTable_pre_request(txpAlrmTxTable_registration * user_context);
    int txpAlrmTxTable_post_request(txpAlrmTxTable_registration * user_context,
        int rc);

    int txpAlrmTxTable_rowreq_ctx_init(txpAlrmTxTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void txpAlrmTxTable_rowreq_ctx_cleanup(txpAlrmTxTable_rowreq_ctx *rowreq_ctx);


    txpAlrmTxTable_rowreq_ctx *
                  txpAlrmTxTable_row_find_by_mib_index(txpAlrmTxTable_mib_index *mib_idx);

extern const oid txpAlrmTxTable_oid[];
extern const int txpAlrmTxTable_oid_size;


#include "FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_interface.h"
#include "FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_data_access.h"
#include "FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_data_get.h"
#include "FTNC-MIB/txpAlrmTxTable/txpAlrmTxTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* TXPALRMTXTABLE_H */
/** @} */
