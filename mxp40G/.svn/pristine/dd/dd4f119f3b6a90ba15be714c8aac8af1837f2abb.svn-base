/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $ 
 *
 * $Id:$
 */
/* standard Net-SNMP includes */
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-features.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>

/* include our parent header */
#include "../../trafficProcessorTable.h"


/** @defgroup data_get data_get: Routines to get data
 *
 * TODO:230:M: Implement trafficProcessorTable get routines.
 * TODO:240:M: Implement trafficProcessorTable mapping routines (if any).
 *
 * These routine are used to get the value for individual objects. The
 * row context is passed, along with a pointer to the memory where the
 * value should be copied.
 *
 * @{
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table trafficProcessorTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::trafficProcessorTable is subid 1 of trafficProcessor.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1, length: 13
*/

/* ---------------------------------------------------------------------
 * TODO:200:r: Implement trafficProcessorTable data context functions.
 */


/**
 * set mib index(es)
 *
 * @param tbl_idx mib index structure
 * @param trafficProcessorIndex_val
 *
 * @retval MFD_SUCCESS     : success.
 * @retval MFD_ERROR       : other error.
 *
 * @remark
 *  This convenience function is useful for setting all the MIB index
 *  components with a single function call. It is assume that the C values
 *  have already been mapped from their native/rawformat to the MIB format.
 */
int
trafficProcessorTable_indexes_set_tbl_idx(trafficProcessorTable_mib_index *tbl_idx, long trafficProcessorIndex_val)
{
    DEBUGMSGTL(("verbose:trafficProcessorTable:trafficProcessorTable_indexes_set_tbl_idx","called\n"));

    /* trafficProcessorIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/a/w/e/R/d/h */
    tbl_idx->trafficProcessorIndex = trafficProcessorIndex_val;
    

    return MFD_SUCCESS;
} /* trafficProcessorTable_indexes_set_tbl_idx */

/**
 * @internal
 * set row context indexes
 *
 * @param reqreq_ctx the row context that needs updated indexes
 *
 * @retval MFD_SUCCESS     : success.
 * @retval MFD_ERROR       : other error.
 *
 * @remark
 *  This function sets the mib indexs, then updates the oid indexs
 *  from the mib index.
 */
int
trafficProcessorTable_indexes_set(trafficProcessorTable_rowreq_ctx *rowreq_ctx, long trafficProcessorIndex_val)
{
    DEBUGMSGTL(("verbose:trafficProcessorTable:trafficProcessorTable_indexes_set","called\n"));

    if(MFD_SUCCESS != trafficProcessorTable_indexes_set_tbl_idx(&rowreq_ctx->tbl_idx
                                   , trafficProcessorIndex_val
           ))
        return MFD_ERROR;

    /*
     * convert mib index to oid index
     */
    rowreq_ctx->oid_idx.len = sizeof(rowreq_ctx->oid_tmp) / sizeof(oid);
    if(0 != trafficProcessorTable_index_to_oid(&rowreq_ctx->oid_idx,
                                    &rowreq_ctx->tbl_idx)) {
        return MFD_ERROR;
    }

    return MFD_SUCCESS;
} /* trafficProcessorTable_indexes_set */


/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerFsmmtrb3s
 * lineFramerFsmmtrb3s is subid 2 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.2
 * Description:
Line Framer FS mismatch for tributary 3
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerFsmmtrb3s data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerFsmmtrb3s_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerFsmmtrb3s_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerFsmmtrb3s_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerFsmmtrb3s_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerFsmmtrb3s_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerFsmmtrb3s data.
 * copy (* lineFramerFsmmtrb3s_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerFsmmtrb3s_val_ptr ) = rowreq_ctx->data.lineFramerFsmmtrb3s;

    return MFD_SUCCESS;
} /* lineFramerFsmmtrb3s_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerFsmmtrb2s
 * lineFramerFsmmtrb2s is subid 3 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.3
 * Description:
Line Framer FS mismatch for tributary 2
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerFsmmtrb2s data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerFsmmtrb2s_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerFsmmtrb2s_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerFsmmtrb2s_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerFsmmtrb2s_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerFsmmtrb2s_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerFsmmtrb2s data.
 * copy (* lineFramerFsmmtrb2s_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerFsmmtrb2s_val_ptr ) = rowreq_ctx->data.lineFramerFsmmtrb2s;

    return MFD_SUCCESS;
} /* lineFramerFsmmtrb2s_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerFsmmtrb1s
 * lineFramerFsmmtrb1s is subid 4 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.4
 * Description:
Line Framer FS mismatch for tributary 1
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerFsmmtrb1s data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerFsmmtrb1s_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerFsmmtrb1s_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerFsmmtrb1s_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerFsmmtrb1s_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerFsmmtrb1s_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerFsmmtrb1s data.
 * copy (* lineFramerFsmmtrb1s_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerFsmmtrb1s_val_ptr ) = rowreq_ctx->data.lineFramerFsmmtrb1s;

    return MFD_SUCCESS;
} /* lineFramerFsmmtrb1s_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerFsmms
 * lineFramerFsmms is subid 5 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.5
 * Description:
Line Framer FS timeslot for FS mismatch
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerFsmms data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerFsmms_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerFsmms_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerFsmms_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerFsmms_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerFsmms_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerFsmms data.
 * copy (* lineFramerFsmms_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerFsmms_val_ptr ) = rowreq_ctx->data.lineFramerFsmms;

    return MFD_SUCCESS;
} /* lineFramerFsmms_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerSif
 * lineFramerSif is subid 6 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.6
 * Description:
Line Framer SIF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerSif data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerSif_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerSif_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerSif_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerSif_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerSif_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerSif data.
 * copy (* lineFramerSif_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerSif_val_ptr ) = rowreq_ctx->data.lineFramerSif;

    return MFD_SUCCESS;
} /* lineFramerSif_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerSoof
 * lineFramerSoof is subid 7 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.7
 * Description:
Line Framer OOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerSoof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerSoof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerSoof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerSoof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerSoof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerSoof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerSoof data.
 * copy (* lineFramerSoof_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerSoof_val_ptr ) = rowreq_ctx->data.lineFramerSoof;

    return MFD_SUCCESS;
} /* lineFramerSoof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerSlof
 * lineFramerSlof is subid 8 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.8
 * Description:
Line Framer LOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerSlof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerSlof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerSlof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerSlof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerSlof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerSlof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerSlof data.
 * copy (* lineFramerSlof_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerSlof_val_ptr ) = rowreq_ctx->data.lineFramerSlof;

    return MFD_SUCCESS;
} /* lineFramerSlof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineFramerFst
 * lineFramerFst is subid 9 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.9
 * Description:
Line Framer FST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineFramerFst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineFramerFst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineFramerFst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineFramerFst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineFramerFst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineFramerFst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineFramerFst data.
 * copy (* lineFramerFst_val_ptr ) from rowreq_ctx->data
 */
    (* lineFramerFst_val_ptr ) = rowreq_ctx->data.lineFramerFst;

    return MFD_SUCCESS;
} /* lineFramerFst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineLosstatLosf
 * lineLosstatLosf is subid 9 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.10
 * Description:
Line LOS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineLosstatLosf data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineLosstatLosf_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineLosstatLosf_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineLosstatLosf_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineLosstatLosf_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineLosstatLosf_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineLosstatLosf data.
 * copy (* lineLosstatLosf_val_ptr ) from rowreq_ctx->data
 */
    (* lineLosstatLosf_val_ptr ) = rowreq_ctx->data.lineLosstatLosf;

    return MFD_SUCCESS;
} /* lineLosstatLosf_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineSecmonFlom
 * lineSecmonFlom is subid 10 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.11
 * Description:
Line Section LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineSecmonFlom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineSecmonFlom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineSecmonFlom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineSecmonFlom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineSecmonFlom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineSecmonFlom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineSecmonFlom data.
 * copy (* lineSecmonFlom_val_ptr ) from rowreq_ctx->data
 */
    (* lineSecmonFlom_val_ptr ) = rowreq_ctx->data.lineSecmonFlom;

    return MFD_SUCCESS;
} /* lineSecmonFlom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineSecmonBipsfs
 * lineSecmonBipsfs is subid 11 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.12
 * Description:
Line Section BIPSFS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineSecmonBipsfs data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineSecmonBipsfs_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineSecmonBipsfs_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineSecmonBipsfs_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineSecmonBipsfs_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineSecmonBipsfs_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineSecmonBipsfs data.
 * copy (* lineSecmonBipsfs_val_ptr ) from rowreq_ctx->data
 */
    (* lineSecmonBipsfs_val_ptr ) = rowreq_ctx->data.lineSecmonBipsfs;

    return MFD_SUCCESS;
} /* lineSecmonBipsfs_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineSecmonDiae
 * lineSecmonDiae is subid 12 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.13
 * Description:
Line Section DIAE status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineSecmonDiae data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineSecmonDiae_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineSecmonDiae_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineSecmonDiae_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineSecmonDiae_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineSecmonDiae_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineSecmonDiae data.
 * copy (* lineSecmonDiae_val_ptr ) from rowreq_ctx->data
 */
    (* lineSecmonDiae_val_ptr ) = rowreq_ctx->data.lineSecmonDiae;

    return MFD_SUCCESS;
} /* lineSecmonDiae_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineSecmonDbdi
 * lineSecmonDbdi is subid 13 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.14
 * Description:
Line Section DBDI status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineSecmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineSecmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineSecmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineSecmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineSecmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineSecmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineSecmonDbdi data.
 * copy (* lineSecmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* lineSecmonDbdi_val_ptr ) = rowreq_ctx->data.lineSecmonDbdi;

    return MFD_SUCCESS;
} /* lineSecmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.lineSecmonLom
 * lineSecmonLom is subid 14 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.15
 * Description:
Line Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the lineSecmonLom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param lineSecmonLom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
lineSecmonLom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * lineSecmonLom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != lineSecmonLom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:lineSecmonLom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the lineSecmonLom data.
 * copy (* lineSecmonLom_val_ptr ) from rowreq_ctx->data
 */
    (* lineSecmonLom_val_ptr ) = rowreq_ctx->data.lineSecmonLom;

    return MFD_SUCCESS;
} /* lineSecmonLom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.linePathmonAccstat
 * linePathmonAccstat is subid 15 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.16
 * Description:
Line Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the linePathmonAccstat data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param linePathmonAccstat_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
linePathmonAccstat_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * linePathmonAccstat_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != linePathmonAccstat_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:linePathmonAccstat_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the linePathmonAccstat data.
 * copy (* linePathmonAccstat_val_ptr ) from rowreq_ctx->data
 */
    (* linePathmonAccstat_val_ptr ) = rowreq_ctx->data.linePathmonAccstat;

    return MFD_SUCCESS;
} /* linePathmonAccstat_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.linePathmonMsiunst
 * linePathmonMsiunst is subid 16 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.17
 * Description:
Line Path MSIUNST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the linePathmonMsiunst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param linePathmonMsiunst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
linePathmonMsiunst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * linePathmonMsiunst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != linePathmonMsiunst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:linePathmonMsiunst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the linePathmonMsiunst data.
 * copy (* linePathmonMsiunst_val_ptr ) from rowreq_ctx->data
 */
    (* linePathmonMsiunst_val_ptr ) = rowreq_ctx->data.linePathmonMsiunst;

    return MFD_SUCCESS;
} /* linePathmonMsiunst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.linePathmonDais
 * linePathmonDais is subid 17 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.18
 * Description:
Line Path DAIS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the linePathmonDais data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param linePathmonDais_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
linePathmonDais_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * linePathmonDais_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != linePathmonDais_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:linePathmonDais_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the linePathmonDais data.
 * copy (* linePathmonDais_val_ptr ) from rowreq_ctx->data
 */
    (* linePathmonDais_val_ptr ) = rowreq_ctx->data.linePathmonDais;

    return MFD_SUCCESS;
} /* linePathmonDais_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.linePathmonDlck
 * linePathmonDlck is subid 18 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.19
 * Description:
Line Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the linePathmonDlck data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param linePathmonDlck_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
linePathmonDlck_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * linePathmonDlck_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != linePathmonDlck_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:linePathmonDlck_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the linePathmonDlck data.
 * copy (* linePathmonDlck_val_ptr ) from rowreq_ctx->data
 */
    (* linePathmonDlck_val_ptr ) = rowreq_ctx->data.linePathmonDlck;

    return MFD_SUCCESS;
} /* linePathmonDlck_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.linePathmonDbdi
 * linePathmonDbdi is subid 19 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.20
 * Description:
Line Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the linePathmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param linePathmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
linePathmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * linePathmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != linePathmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:linePathmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the linePathmonDbdi data.
 * copy (* linePathmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* linePathmonDbdi_val_ptr ) = rowreq_ctx->data.linePathmonDbdi;

    return MFD_SUCCESS;
} /* linePathmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1FramerFsmms
 * client1FramerFsmms is subid 20 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.21
 * Description:
Client 1 FS mismatch
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1FramerFsmms data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1FramerFsmms_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1FramerFsmms_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1FramerFsmms_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1FramerFsmms_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1FramerFsmms_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1FramerFsmms data.
 * copy (* client1FramerFsmms_val_ptr ) from rowreq_ctx->data
 */
    (* client1FramerFsmms_val_ptr ) = rowreq_ctx->data.client1FramerFsmms;

    return MFD_SUCCESS;
} /* client1FramerFsmms_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1FramerFsusts
 * client1FramerFsusts is subid 21 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.22
 * Description:
Client 1 FS unstable
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1FramerFsusts data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1FramerFsusts_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1FramerFsusts_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1FramerFsusts_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1FramerFsusts_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1FramerFsusts_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1FramerFsusts data.
 * copy (* client1FramerFsusts_val_ptr ) from rowreq_ctx->data
 */
    (* client1FramerFsusts_val_ptr ) = rowreq_ctx->data.client1FramerFsusts;

    return MFD_SUCCESS;
} /* client1FramerFsusts_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1FramerSif
 * client1FramerSif is subid 22 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.23
 * Description:
Client1 Framer SIF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1FramerSif data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1FramerSif_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1FramerSif_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1FramerSif_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1FramerSif_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1FramerSif_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1FramerSif data.
 * copy (* client1FramerSif_val_ptr ) from rowreq_ctx->data
 */
    (* client1FramerSif_val_ptr ) = rowreq_ctx->data.client1FramerSif;

    return MFD_SUCCESS;
} /* client1FramerSif_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1FramerSoof
 * client1FramerSoof is subid 23 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.24
 * Description:
Client1 Framer OOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1FramerSoof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1FramerSoof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1FramerSoof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1FramerSoof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1FramerSoof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1FramerSoof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1FramerSoof data.
 * copy (* client1FramerSoof_val_ptr ) from rowreq_ctx->data
 */
    (* client1FramerSoof_val_ptr ) = rowreq_ctx->data.client1FramerSoof;

    return MFD_SUCCESS;
} /* client1FramerSoof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1FramerSlof
 * client1FramerSlof is subid 24 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.25
 * Description:
Client1 Framer LOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1FramerSlof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1FramerSlof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1FramerSlof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1FramerSlof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1FramerSlof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1FramerSlof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1FramerSlof data.
 * copy (* client1FramerSlof_val_ptr ) from rowreq_ctx->data
 */
    (* client1FramerSlof_val_ptr ) = rowreq_ctx->data.client1FramerSlof;

    return MFD_SUCCESS;
} /* client1FramerSlof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1FramerFst
 * client1FramerFst is subid 25 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.26
 * Description:
Client1 Framer FST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1FramerFst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1FramerFst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1FramerFst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1FramerFst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1FramerFst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1FramerFst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1FramerFst data.
 * copy (* client1FramerFst_val_ptr ) from rowreq_ctx->data
 */
    (* client1FramerFst_val_ptr ) = rowreq_ctx->data.client1FramerFst;

    return MFD_SUCCESS;
} /* client1FramerFst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1LosstatLosf
 * client1LosstatLosf is subid 26 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.27
 * Description:
Client1 LOS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1LosstatLosf data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1LosstatLosf_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1LosstatLosf_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1LosstatLosf_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1LosstatLosf_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1LosstatLosf_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1LosstatLosf data.
 * copy (* client1LosstatLosf_val_ptr ) from rowreq_ctx->data
 */
    (* client1LosstatLosf_val_ptr ) = rowreq_ctx->data.client1LosstatLosf;

    return MFD_SUCCESS;
} /* client1LosstatLosf_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1SecmonFlom
 * client1SecmonFlom is subid 27 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.28
 * Description:
Client1 Section LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1SecmonFlom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1SecmonFlom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1SecmonFlom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1SecmonFlom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1SecmonFlom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1SecmonFlom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1SecmonFlom data.
 * copy (* client1SecmonFlom_val_ptr ) from rowreq_ctx->data
 */
    (* client1SecmonFlom_val_ptr ) = rowreq_ctx->data.client1SecmonFlom;

    return MFD_SUCCESS;
} /* client1SecmonFlom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1SecmonBipsfs
 * client1SecmonBipsfs is subid 28 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.29
 * Description:
Client1 Section BIPSFS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1SecmonBipsfs data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1SecmonBipsfs_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1SecmonBipsfs_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1SecmonBipsfs_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1SecmonBipsfs_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1SecmonBipsfs_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1SecmonBipsfs data.
 * copy (* client1SecmonBipsfs_val_ptr ) from rowreq_ctx->data
 */
    (* client1SecmonBipsfs_val_ptr ) = rowreq_ctx->data.client1SecmonBipsfs;

    return MFD_SUCCESS;
} /* client1SecmonBipsfs_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1SecmonDiae
 * client1SecmonDiae is subid 29 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.30
 * Description:
Client1 Section DIAE status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1SecmonDiae data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1SecmonDiae_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1SecmonDiae_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1SecmonDiae_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1SecmonDiae_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1SecmonDiae_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1SecmonDiae data.
 * copy (* client1SecmonDiae_val_ptr ) from rowreq_ctx->data
 */
    (* client1SecmonDiae_val_ptr ) = rowreq_ctx->data.client1SecmonDiae;

    return MFD_SUCCESS;
} /* client1SecmonDiae_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1SecmonDbdi
 * client1SecmonDbdi is subid 30 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.31
 * Description:
Client1 Section DBDI status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1SecmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1SecmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1SecmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1SecmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1SecmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1SecmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1SecmonDbdi data.
 * copy (* client1SecmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client1SecmonDbdi_val_ptr ) = rowreq_ctx->data.client1SecmonDbdi;

    return MFD_SUCCESS;
} /* client1SecmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1SecmonLom
 * client1SecmonLom is subid 31 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.32
 * Description:
Client1 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1SecmonLom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1SecmonLom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1SecmonLom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1SecmonLom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1SecmonLom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1SecmonLom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1SecmonLom data.
 * copy (* client1SecmonLom_val_ptr ) from rowreq_ctx->data
 */
    (* client1SecmonLom_val_ptr ) = rowreq_ctx->data.client1SecmonLom;

    return MFD_SUCCESS;
} /* client1SecmonLom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1PathmonAccstat
 * client1PathmonAccstat is subid 32 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.33
 * Description:
Client1 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1PathmonAccstat data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1PathmonAccstat_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1PathmonAccstat_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1PathmonAccstat_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1PathmonAccstat_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1PathmonAccstat_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1PathmonAccstat data.
 * copy (* client1PathmonAccstat_val_ptr ) from rowreq_ctx->data
 */
    (* client1PathmonAccstat_val_ptr ) = rowreq_ctx->data.client1PathmonAccstat;

    return MFD_SUCCESS;
} /* client1PathmonAccstat_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1PathmonMsiunst
 * client1PathmonMsiunst is subid 33 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.34
 * Description:
Client1 Path MSIUNST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1PathmonMsiunst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1PathmonMsiunst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1PathmonMsiunst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1PathmonMsiunst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1PathmonMsiunst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1PathmonMsiunst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1PathmonMsiunst data.
 * copy (* client1PathmonMsiunst_val_ptr ) from rowreq_ctx->data
 */
    (* client1PathmonMsiunst_val_ptr ) = rowreq_ctx->data.client1PathmonMsiunst;

    return MFD_SUCCESS;
} /* client1PathmonMsiunst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1PathmonDais
 * client1PathmonDais is subid 34 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.35
 * Description:
Client1 Path DAIS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1PathmonDais data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1PathmonDais_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1PathmonDais_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1PathmonDais_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1PathmonDais_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1PathmonDais_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1PathmonDais data.
 * copy (* client1PathmonDais_val_ptr ) from rowreq_ctx->data
 */
    (* client1PathmonDais_val_ptr ) = rowreq_ctx->data.client1PathmonDais;

    return MFD_SUCCESS;
} /* client1PathmonDais_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1PathmonDlck
 * client1PathmonDlck is subid 35 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.36
 * Description:
Client1 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1PathmonDlck data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1PathmonDlck_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1PathmonDlck_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1PathmonDlck_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1PathmonDlck_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1PathmonDlck_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1PathmonDlck data.
 * copy (* client1PathmonDlck_val_ptr ) from rowreq_ctx->data
 */
    (* client1PathmonDlck_val_ptr ) = rowreq_ctx->data.client1PathmonDlck;

    return MFD_SUCCESS;
} /* client1PathmonDlck_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client1PathmonDbdi
 * client1PathmonDbdi is subid 36 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.37
 * Description:
Client1 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client1PathmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client1PathmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client1PathmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client1PathmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client1PathmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client1PathmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client1PathmonDbdi data.
 * copy (* client1PathmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client1PathmonDbdi_val_ptr ) = rowreq_ctx->data.client1PathmonDbdi;

    return MFD_SUCCESS;
} /* client1PathmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2FramerFsmms
 * client2FramerFsmms is subid 37 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.38
 * Description:
Client 1 FS mismatch
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2FramerFsmms data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2FramerFsmms_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2FramerFsmms_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2FramerFsmms_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2FramerFsmms_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2FramerFsmms_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2FramerFsmms data.
 * copy (* client2FramerFsmms_val_ptr ) from rowreq_ctx->data
 */
    (* client2FramerFsmms_val_ptr ) = rowreq_ctx->data.client2FramerFsmms;

    return MFD_SUCCESS;
} /* client2FramerFsmms_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2FramerFsusts
 * client2FramerFsusts is subid 38 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.39
 * Description:
Client 1 FS unstable
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2FramerFsusts data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2FramerFsusts_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2FramerFsusts_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2FramerFsusts_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2FramerFsusts_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2FramerFsusts_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2FramerFsusts data.
 * copy (* client2FramerFsusts_val_ptr ) from rowreq_ctx->data
 */
    (* client2FramerFsusts_val_ptr ) = rowreq_ctx->data.client2FramerFsusts;

    return MFD_SUCCESS;
} /* client2FramerFsusts_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2FramerSif
 * client2FramerSif is subid 39 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.40
 * Description:
Client2 Framer SIF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2FramerSif data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2FramerSif_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2FramerSif_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2FramerSif_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2FramerSif_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2FramerSif_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2FramerSif data.
 * copy (* client2FramerSif_val_ptr ) from rowreq_ctx->data
 */
    (* client2FramerSif_val_ptr ) = rowreq_ctx->data.client2FramerSif;

    return MFD_SUCCESS;
} /* client2FramerSif_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2FramerSoof
 * client2FramerSoof is subid 40 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.41
 * Description:
Client2 Framer OOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2FramerSoof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2FramerSoof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2FramerSoof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2FramerSoof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2FramerSoof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2FramerSoof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2FramerSoof data.
 * copy (* client2FramerSoof_val_ptr ) from rowreq_ctx->data
 */
    (* client2FramerSoof_val_ptr ) = rowreq_ctx->data.client2FramerSoof;

    return MFD_SUCCESS;
} /* client2FramerSoof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2FramerSlof
 * client2FramerSlof is subid 41 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.42
 * Description:
Client2 Framer LOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2FramerSlof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2FramerSlof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2FramerSlof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2FramerSlof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2FramerSlof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2FramerSlof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2FramerSlof data.
 * copy (* client2FramerSlof_val_ptr ) from rowreq_ctx->data
 */
    (* client2FramerSlof_val_ptr ) = rowreq_ctx->data.client2FramerSlof;

    return MFD_SUCCESS;
} /* client2FramerSlof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2FramerFst
 * client2FramerFst is subid 42 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.43
 * Description:
Client2 Framer FST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2FramerFst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2FramerFst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2FramerFst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2FramerFst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2FramerFst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2FramerFst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2FramerFst data.
 * copy (* client2FramerFst_val_ptr ) from rowreq_ctx->data
 */
    (* client2FramerFst_val_ptr ) = rowreq_ctx->data.client2FramerFst;

    return MFD_SUCCESS;
} /* client2FramerFst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2LosstatLosf
 * client2LosstatLosf is subid 43 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.44
 * Description:
Client2 LOS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2LosstatLosf data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2LosstatLosf_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2LosstatLosf_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2LosstatLosf_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2LosstatLosf_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2LosstatLosf_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2LosstatLosf data.
 * copy (* client2LosstatLosf_val_ptr ) from rowreq_ctx->data
 */
    (* client2LosstatLosf_val_ptr ) = rowreq_ctx->data.client2LosstatLosf;

    return MFD_SUCCESS;
} /* client2LosstatLosf_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2SecmonFlom
 * client2SecmonFlom is subid 44 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.45
 * Description:
Client2 Section LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2SecmonFlom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2SecmonFlom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2SecmonFlom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2SecmonFlom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2SecmonFlom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2SecmonFlom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2SecmonFlom data.
 * copy (* client2SecmonFlom_val_ptr ) from rowreq_ctx->data
 */
    (* client2SecmonFlom_val_ptr ) = rowreq_ctx->data.client2SecmonFlom;

    return MFD_SUCCESS;
} /* client2SecmonFlom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2SecmonBipsfs
 * client2SecmonBipsfs is subid 45 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.46
 * Description:
Client2 Section BIPSFS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2SecmonBipsfs data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2SecmonBipsfs_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2SecmonBipsfs_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2SecmonBipsfs_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2SecmonBipsfs_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2SecmonBipsfs_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2SecmonBipsfs data.
 * copy (* client2SecmonBipsfs_val_ptr ) from rowreq_ctx->data
 */
    (* client2SecmonBipsfs_val_ptr ) = rowreq_ctx->data.client2SecmonBipsfs;

    return MFD_SUCCESS;
} /* client2SecmonBipsfs_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2SecmonDiae
 * client2SecmonDiae is subid 46 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.47
 * Description:
Client2 Section DIAE status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2SecmonDiae data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2SecmonDiae_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2SecmonDiae_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2SecmonDiae_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2SecmonDiae_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2SecmonDiae_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2SecmonDiae data.
 * copy (* client2SecmonDiae_val_ptr ) from rowreq_ctx->data
 */
    (* client2SecmonDiae_val_ptr ) = rowreq_ctx->data.client2SecmonDiae;

    return MFD_SUCCESS;
} /* client2SecmonDiae_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2SecmonDbdi
 * client2SecmonDbdi is subid 47 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.48
 * Description:
Client2 Section DBDI status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2SecmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2SecmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2SecmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2SecmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2SecmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2SecmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2SecmonDbdi data.
 * copy (* client2SecmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client2SecmonDbdi_val_ptr ) = rowreq_ctx->data.client2SecmonDbdi;

    return MFD_SUCCESS;
} /* client2SecmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2SecmonLom
 * client2SecmonLom is subid 48 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.49
 * Description:
Client2 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2SecmonLom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2SecmonLom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2SecmonLom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2SecmonLom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2SecmonLom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2SecmonLom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2SecmonLom data.
 * copy (* client2SecmonLom_val_ptr ) from rowreq_ctx->data
 */
    (* client2SecmonLom_val_ptr ) = rowreq_ctx->data.client2SecmonLom;

    return MFD_SUCCESS;
} /* client2SecmonLom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2PathmonAccstat
 * client2PathmonAccstat is subid 49 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.50
 * Description:
Client2 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2PathmonAccstat data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2PathmonAccstat_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2PathmonAccstat_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2PathmonAccstat_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2PathmonAccstat_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2PathmonAccstat_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2PathmonAccstat data.
 * copy (* client2PathmonAccstat_val_ptr ) from rowreq_ctx->data
 */
    (* client2PathmonAccstat_val_ptr ) = rowreq_ctx->data.client2PathmonAccstat;

    return MFD_SUCCESS;
} /* client2PathmonAccstat_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2PathmonMsiunst
 * client2PathmonMsiunst is subid 50 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.51
 * Description:
Client2 Path MSIUNST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2PathmonMsiunst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2PathmonMsiunst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2PathmonMsiunst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2PathmonMsiunst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2PathmonMsiunst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2PathmonMsiunst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2PathmonMsiunst data.
 * copy (* client2PathmonMsiunst_val_ptr ) from rowreq_ctx->data
 */
    (* client2PathmonMsiunst_val_ptr ) = rowreq_ctx->data.client2PathmonMsiunst;

    return MFD_SUCCESS;
} /* client2PathmonMsiunst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2PathmonDais
 * client2PathmonDais is subid 51 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.52
 * Description:
Client2 Path DAIS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2PathmonDais data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2PathmonDais_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2PathmonDais_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2PathmonDais_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2PathmonDais_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2PathmonDais_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2PathmonDais data.
 * copy (* client2PathmonDais_val_ptr ) from rowreq_ctx->data
 */
    (* client2PathmonDais_val_ptr ) = rowreq_ctx->data.client2PathmonDais;

    return MFD_SUCCESS;
} /* client2PathmonDais_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2PathmonDlck
 * client2PathmonDlck is subid 52 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.53
 * Description:
Client2 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2PathmonDlck data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2PathmonDlck_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2PathmonDlck_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2PathmonDlck_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2PathmonDlck_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2PathmonDlck_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2PathmonDlck data.
 * copy (* client2PathmonDlck_val_ptr ) from rowreq_ctx->data
 */
    (* client2PathmonDlck_val_ptr ) = rowreq_ctx->data.client2PathmonDlck;

    return MFD_SUCCESS;
} /* client2PathmonDlck_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client2PathmonDbdi
 * client2PathmonDbdi is subid 53 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.54
 * Description:
Client2 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client2PathmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client2PathmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client2PathmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client2PathmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client2PathmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client2PathmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client2PathmonDbdi data.
 * copy (* client2PathmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client2PathmonDbdi_val_ptr ) = rowreq_ctx->data.client2PathmonDbdi;

    return MFD_SUCCESS;
} /* client2PathmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3FramerFsmms
 * client3FramerFsmms is subid 54 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.55
 * Description:
Client 1 FS mismatch
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3FramerFsmms data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3FramerFsmms_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3FramerFsmms_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3FramerFsmms_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3FramerFsmms_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3FramerFsmms_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3FramerFsmms data.
 * copy (* client3FramerFsmms_val_ptr ) from rowreq_ctx->data
 */
    (* client3FramerFsmms_val_ptr ) = rowreq_ctx->data.client3FramerFsmms;

    return MFD_SUCCESS;
} /* client3FramerFsmms_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3FramerFsusts
 * client3FramerFsusts is subid 55 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.56
 * Description:
Client 1 FS unstable
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3FramerFsusts data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3FramerFsusts_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3FramerFsusts_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3FramerFsusts_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3FramerFsusts_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3FramerFsusts_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3FramerFsusts data.
 * copy (* client3FramerFsusts_val_ptr ) from rowreq_ctx->data
 */
    (* client3FramerFsusts_val_ptr ) = rowreq_ctx->data.client3FramerFsusts;

    return MFD_SUCCESS;
} /* client3FramerFsusts_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3FramerSif
 * client3FramerSif is subid 56 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.57
 * Description:
Client3 Framer SIF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3FramerSif data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3FramerSif_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3FramerSif_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3FramerSif_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3FramerSif_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3FramerSif_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3FramerSif data.
 * copy (* client3FramerSif_val_ptr ) from rowreq_ctx->data
 */
    (* client3FramerSif_val_ptr ) = rowreq_ctx->data.client3FramerSif;

    return MFD_SUCCESS;
} /* client3FramerSif_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3FramerSoof
 * client3FramerSoof is subid 57 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.58
 * Description:
Client3 Framer OOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3FramerSoof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3FramerSoof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3FramerSoof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3FramerSoof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3FramerSoof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3FramerSoof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3FramerSoof data.
 * copy (* client3FramerSoof_val_ptr ) from rowreq_ctx->data
 */
    (* client3FramerSoof_val_ptr ) = rowreq_ctx->data.client3FramerSoof;

    return MFD_SUCCESS;
} /* client3FramerSoof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3FramerSlof
 * client3FramerSlof is subid 58 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.59
 * Description:
Client3 Framer LOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3FramerSlof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3FramerSlof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3FramerSlof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3FramerSlof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3FramerSlof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3FramerSlof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3FramerSlof data.
 * copy (* client3FramerSlof_val_ptr ) from rowreq_ctx->data
 */
    (* client3FramerSlof_val_ptr ) = rowreq_ctx->data.client3FramerSlof;

    return MFD_SUCCESS;
} /* client3FramerSlof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3FramerFst
 * client3FramerFst is subid 59 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.60
 * Description:
Client3 Framer FST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3FramerFst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3FramerFst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3FramerFst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3FramerFst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3FramerFst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3FramerFst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3FramerFst data.
 * copy (* client3FramerFst_val_ptr ) from rowreq_ctx->data
 */
    (* client3FramerFst_val_ptr ) = rowreq_ctx->data.client3FramerFst;

    return MFD_SUCCESS;
} /* client3FramerFst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3LosstatLosf
 * client3LosstatLosf is subid 60 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.61
 * Description:
Client3 LOS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3LosstatLosf data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3LosstatLosf_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3LosstatLosf_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3LosstatLosf_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3LosstatLosf_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3LosstatLosf_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3LosstatLosf data.
 * copy (* client3LosstatLosf_val_ptr ) from rowreq_ctx->data
 */
    (* client3LosstatLosf_val_ptr ) = rowreq_ctx->data.client3LosstatLosf;

    return MFD_SUCCESS;
} /* client3LosstatLosf_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3SecmonFlom
 * client3SecmonFlom is subid 61 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.62
 * Description:
Client3 Section LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3SecmonFlom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3SecmonFlom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3SecmonFlom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3SecmonFlom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3SecmonFlom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3SecmonFlom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3SecmonFlom data.
 * copy (* client3SecmonFlom_val_ptr ) from rowreq_ctx->data
 */
    (* client3SecmonFlom_val_ptr ) = rowreq_ctx->data.client3SecmonFlom;

    return MFD_SUCCESS;
} /* client3SecmonFlom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3SecmonBipsfs
 * client3SecmonBipsfs is subid 62 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.63
 * Description:
Client3 Section BIPSFS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3SecmonBipsfs data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3SecmonBipsfs_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3SecmonBipsfs_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3SecmonBipsfs_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3SecmonBipsfs_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3SecmonBipsfs_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3SecmonBipsfs data.
 * copy (* client3SecmonBipsfs_val_ptr ) from rowreq_ctx->data
 */
    (* client3SecmonBipsfs_val_ptr ) = rowreq_ctx->data.client3SecmonBipsfs;

    return MFD_SUCCESS;
} /* client3SecmonBipsfs_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3SecmonDiae
 * client3SecmonDiae is subid 63 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.64
 * Description:
Client3 Section DIAE status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3SecmonDiae data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3SecmonDiae_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3SecmonDiae_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3SecmonDiae_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3SecmonDiae_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3SecmonDiae_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3SecmonDiae data.
 * copy (* client3SecmonDiae_val_ptr ) from rowreq_ctx->data
 */
    (* client3SecmonDiae_val_ptr ) = rowreq_ctx->data.client3SecmonDiae;

    return MFD_SUCCESS;
} /* client3SecmonDiae_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3SecmonDbdi
 * client3SecmonDbdi is subid 64 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.65
 * Description:
Client3 Section DBDI status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3SecmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3SecmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3SecmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3SecmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3SecmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3SecmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3SecmonDbdi data.
 * copy (* client3SecmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client3SecmonDbdi_val_ptr ) = rowreq_ctx->data.client3SecmonDbdi;

    return MFD_SUCCESS;
} /* client3SecmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3SecmonLom
 * client3SecmonLom is subid 65 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.66
 * Description:
Client3 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3SecmonLom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3SecmonLom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3SecmonLom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3SecmonLom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3SecmonLom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3SecmonLom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3SecmonLom data.
 * copy (* client3SecmonLom_val_ptr ) from rowreq_ctx->data
 */
    (* client3SecmonLom_val_ptr ) = rowreq_ctx->data.client3SecmonLom;

    return MFD_SUCCESS;
} /* client3SecmonLom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3PathmonAccstat
 * client3PathmonAccstat is subid 66 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.67
 * Description:
Client3 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3PathmonAccstat data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3PathmonAccstat_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3PathmonAccstat_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3PathmonAccstat_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3PathmonAccstat_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3PathmonAccstat_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3PathmonAccstat data.
 * copy (* client3PathmonAccstat_val_ptr ) from rowreq_ctx->data
 */
    (* client3PathmonAccstat_val_ptr ) = rowreq_ctx->data.client3PathmonAccstat;

    return MFD_SUCCESS;
} /* client3PathmonAccstat_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3PathmonMsiunst
 * client3PathmonMsiunst is subid 67 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.68
 * Description:
Client3 Path MSIUNST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3PathmonMsiunst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3PathmonMsiunst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3PathmonMsiunst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3PathmonMsiunst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3PathmonMsiunst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3PathmonMsiunst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3PathmonMsiunst data.
 * copy (* client3PathmonMsiunst_val_ptr ) from rowreq_ctx->data
 */
    (* client3PathmonMsiunst_val_ptr ) = rowreq_ctx->data.client3PathmonMsiunst;

    return MFD_SUCCESS;
} /* client3PathmonMsiunst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3PathmonDais
 * client3PathmonDais is subid 68 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.69
 * Description:
Client3 Path DAIS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3PathmonDais data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3PathmonDais_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3PathmonDais_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3PathmonDais_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3PathmonDais_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3PathmonDais_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3PathmonDais data.
 * copy (* client3PathmonDais_val_ptr ) from rowreq_ctx->data
 */
    (* client3PathmonDais_val_ptr ) = rowreq_ctx->data.client3PathmonDais;

    return MFD_SUCCESS;
} /* client3PathmonDais_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3PathmonDlck
 * client3PathmonDlck is subid 69 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.70
 * Description:
Client3 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3PathmonDlck data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3PathmonDlck_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3PathmonDlck_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3PathmonDlck_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3PathmonDlck_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3PathmonDlck_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3PathmonDlck data.
 * copy (* client3PathmonDlck_val_ptr ) from rowreq_ctx->data
 */
    (* client3PathmonDlck_val_ptr ) = rowreq_ctx->data.client3PathmonDlck;

    return MFD_SUCCESS;
} /* client3PathmonDlck_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client3PathmonDbdi
 * client3PathmonDbdi is subid 70 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.71
 * Description:
Client3 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client3PathmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client3PathmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client3PathmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client3PathmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client3PathmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client3PathmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client3PathmonDbdi data.
 * copy (* client3PathmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client3PathmonDbdi_val_ptr ) = rowreq_ctx->data.client3PathmonDbdi;

    return MFD_SUCCESS;
} /* client3PathmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4FramerFsmms
 * client4FramerFsmms is subid 71 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.72
 * Description:
Client 1 FS mismatch
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4FramerFsmms data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4FramerFsmms_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4FramerFsmms_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4FramerFsmms_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4FramerFsmms_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4FramerFsmms_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4FramerFsmms data.
 * copy (* client4FramerFsmms_val_ptr ) from rowreq_ctx->data
 */
    (* client4FramerFsmms_val_ptr ) = rowreq_ctx->data.client4FramerFsmms;

    return MFD_SUCCESS;
} /* client4FramerFsmms_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4FramerFsusts
 * client4FramerFsusts is subid 72 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.73
 * Description:
Client 1 FS unstable
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4FramerFsusts data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4FramerFsusts_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4FramerFsusts_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4FramerFsusts_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4FramerFsusts_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4FramerFsusts_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4FramerFsusts data.
 * copy (* client4FramerFsusts_val_ptr ) from rowreq_ctx->data
 */
    (* client4FramerFsusts_val_ptr ) = rowreq_ctx->data.client4FramerFsusts;

    return MFD_SUCCESS;
} /* client4FramerFsusts_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4FramerSif
 * client4FramerSif is subid 73 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.74
 * Description:
Client4 Framer SIF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4FramerSif data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4FramerSif_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4FramerSif_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4FramerSif_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4FramerSif_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4FramerSif_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4FramerSif data.
 * copy (* client4FramerSif_val_ptr ) from rowreq_ctx->data
 */
    (* client4FramerSif_val_ptr ) = rowreq_ctx->data.client4FramerSif;

    return MFD_SUCCESS;
} /* client4FramerSif_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4FramerSoof
 * client4FramerSoof is subid 74 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.75
 * Description:
Client4 Framer OOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4FramerSoof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4FramerSoof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4FramerSoof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4FramerSoof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4FramerSoof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4FramerSoof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4FramerSoof data.
 * copy (* client4FramerSoof_val_ptr ) from rowreq_ctx->data
 */
    (* client4FramerSoof_val_ptr ) = rowreq_ctx->data.client4FramerSoof;

    return MFD_SUCCESS;
} /* client4FramerSoof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4FramerSlof
 * client4FramerSlof is subid 75 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.76
 * Description:
Client4 Framer LOF status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4FramerSlof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4FramerSlof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4FramerSlof_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4FramerSlof_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4FramerSlof_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4FramerSlof_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4FramerSlof data.
 * copy (* client4FramerSlof_val_ptr ) from rowreq_ctx->data
 */
    (* client4FramerSlof_val_ptr ) = rowreq_ctx->data.client4FramerSlof;

    return MFD_SUCCESS;
} /* client4FramerSlof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4FramerFst
 * client4FramerFst is subid 76 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.77
 * Description:
Client4 Framer FST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4FramerFst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4FramerFst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4FramerFst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4FramerFst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4FramerFst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4FramerFst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4FramerFst data.
 * copy (* client4FramerFst_val_ptr ) from rowreq_ctx->data
 */
    (* client4FramerFst_val_ptr ) = rowreq_ctx->data.client4FramerFst;

    return MFD_SUCCESS;
} /* client4FramerFst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4LosstatLosf
 * client4LosstatLosf is subid 77 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.78
 * Description:
Client4 LOS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4LosstatLosf data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4LosstatLosf_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4LosstatLosf_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4LosstatLosf_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4LosstatLosf_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4LosstatLosf_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4LosstatLosf data.
 * copy (* client4LosstatLosf_val_ptr ) from rowreq_ctx->data
 */
    (* client4LosstatLosf_val_ptr ) = rowreq_ctx->data.client4LosstatLosf;

    return MFD_SUCCESS;
} /* client4LosstatLosf_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4SecmonFlom
 * client4SecmonFlom is subid 78 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.79
 * Description:
Client4 Section LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4SecmonFlom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4SecmonFlom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4SecmonFlom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4SecmonFlom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4SecmonFlom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4SecmonFlom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4SecmonFlom data.
 * copy (* client4SecmonFlom_val_ptr ) from rowreq_ctx->data
 */
    (* client4SecmonFlom_val_ptr ) = rowreq_ctx->data.client4SecmonFlom;

    return MFD_SUCCESS;
} /* client4SecmonFlom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4SecmonBipsfs
 * client4SecmonBipsfs is subid 79 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.80
 * Description:
Client4 Section BIPSFS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4SecmonBipsfs data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4SecmonBipsfs_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4SecmonBipsfs_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4SecmonBipsfs_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4SecmonBipsfs_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4SecmonBipsfs_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4SecmonBipsfs data.
 * copy (* client4SecmonBipsfs_val_ptr ) from rowreq_ctx->data
 */
    (* client4SecmonBipsfs_val_ptr ) = rowreq_ctx->data.client4SecmonBipsfs;

    return MFD_SUCCESS;
} /* client4SecmonBipsfs_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4SecmonDiae
 * client4SecmonDiae is subid 80 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.81
 * Description:
Client4 Section DIAE status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4SecmonDiae data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4SecmonDiae_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4SecmonDiae_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4SecmonDiae_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4SecmonDiae_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4SecmonDiae_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4SecmonDiae data.
 * copy (* client4SecmonDiae_val_ptr ) from rowreq_ctx->data
 */
    (* client4SecmonDiae_val_ptr ) = rowreq_ctx->data.client4SecmonDiae;

    return MFD_SUCCESS;
} /* client4SecmonDiae_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4SecmonDbdi
 * client4SecmonDbdi is subid 81 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.82
 * Description:
Client4 Section DBDI status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4SecmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4SecmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4SecmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4SecmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4SecmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4SecmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4SecmonDbdi data.
 * copy (* client4SecmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client4SecmonDbdi_val_ptr ) = rowreq_ctx->data.client4SecmonDbdi;

    return MFD_SUCCESS;
} /* client4SecmonDbdi_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4SecmonLom
 * client4SecmonLom is subid 82 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.83
 * Description:
Client4 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4SecmonLom data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4SecmonLom_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4SecmonLom_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4SecmonLom_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4SecmonLom_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4SecmonLom_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4SecmonLom data.
 * copy (* client4SecmonLom_val_ptr ) from rowreq_ctx->data
 */
    (* client4SecmonLom_val_ptr ) = rowreq_ctx->data.client4SecmonLom;

    return MFD_SUCCESS;
} /* client4SecmonLom_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4PathmonAccstat
 * client4PathmonAccstat is subid 83 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.84
 * Description:
Client4 Path LOM status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4PathmonAccstat data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4PathmonAccstat_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4PathmonAccstat_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4PathmonAccstat_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4PathmonAccstat_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4PathmonAccstat_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4PathmonAccstat data.
 * copy (* client4PathmonAccstat_val_ptr ) from rowreq_ctx->data
 */
    (* client4PathmonAccstat_val_ptr ) = rowreq_ctx->data.client4PathmonAccstat;

    return MFD_SUCCESS;
} /* client4PathmonAccstat_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4PathmonMsiunst
 * client4PathmonMsiunst is subid 84 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.85
 * Description:
Client4 Path MSIUNST status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4PathmonMsiunst data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4PathmonMsiunst_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4PathmonMsiunst_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4PathmonMsiunst_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4PathmonMsiunst_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4PathmonMsiunst_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4PathmonMsiunst data.
 * copy (* client4PathmonMsiunst_val_ptr ) from rowreq_ctx->data
 */
    (* client4PathmonMsiunst_val_ptr ) = rowreq_ctx->data.client4PathmonMsiunst;

    return MFD_SUCCESS;
} /* client4PathmonMsiunst_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4PathmonDais
 * client4PathmonDais is subid 85 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.86
 * Description:
Client4 Path DAIS status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4PathmonDais data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4PathmonDais_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4PathmonDais_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4PathmonDais_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4PathmonDais_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4PathmonDais_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4PathmonDais data.
 * copy (* client4PathmonDais_val_ptr ) from rowreq_ctx->data
 */
    (* client4PathmonDais_val_ptr ) = rowreq_ctx->data.client4PathmonDais;

    return MFD_SUCCESS;
} /* client4PathmonDais_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4PathmonDlck
 * client4PathmonDlck is subid 86 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.87
 * Description:
Client4 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4PathmonDlck data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4PathmonDlck_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4PathmonDlck_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4PathmonDlck_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4PathmonDlck_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4PathmonDlck_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4PathmonDlck data.
 * copy (* client4PathmonDlck_val_ptr ) from rowreq_ctx->data
 */
    (* client4PathmonDlck_val_ptr ) = rowreq_ctx->data.client4PathmonDlck;

    return MFD_SUCCESS;
} /* client4PathmonDlck_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::trafficProcessorEntry.client4PathmonDbdi
 * client4PathmonDbdi is subid 87 of trafficProcessorEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.1.2.10.1.1.88
 * Description:
Client4 Path DLCK status
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the client4PathmonDbdi data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param client4PathmonDbdi_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
client4PathmonDbdi_get( trafficProcessorTable_rowreq_ctx *rowreq_ctx, long * client4PathmonDbdi_val_ptr )
{
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != client4PathmonDbdi_val_ptr );


    DEBUGMSGTL(("verbose:trafficProcessorTable:client4PathmonDbdi_get","called\n"));

    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the client4PathmonDbdi data.
 * copy (* client4PathmonDbdi_val_ptr ) from rowreq_ctx->data
 */
    (* client4PathmonDbdi_val_ptr ) = rowreq_ctx->data.client4PathmonDbdi;

    return MFD_SUCCESS;
} /* client4PathmonDbdi_get */



/** @} */
