/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $ 
 *
 * $Id:$
 */
/* standard Net-SNMP includes */
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-features.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>

/* include our parent header */
#include "../../txpSeverityTable.h"


/** @defgroup data_get data_get: Routines to get data
 *
 * TODO:230:M: Implement txpSeverityTable get routines.
 * TODO:240:M: Implement txpSeverityTable mapping routines (if any).
 *
 * These routine are used to get the value for individual objects. The
 * row context is passed, along with a pointer to the memory where the
 * value should be copied.
 *
 * @{
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table txpSeverityTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * FTNC-MIB::txpSeverityTable is subid 1 of txpAlarms.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1, length: 12
*/

/* ---------------------------------------------------------------------
 * TODO:200:r: Implement txpSeverityTable data context functions.
 */


/**
 * set mib index(es)
 *
 * @param tbl_idx mib index structure
 * @param txpSeverityIndex_val
 *
 * @retval MFD_SUCCESS     : success.
 * @retval MFD_ERROR       : other error.
 *
 * @remark
 *  This convenience function is useful for setting all the MIB index
 *  components with a single function call. It is assume that the C values
 *  have already been mapped from their native/rawformat to the MIB format.
 */
int txpSeverityTable_indexes_set_tbl_idx(txpSeverityTable_mib_index *tbl_idx, long txpSeverityIndex_val)
{
    DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityTable_indexes_set_tbl_idx","called\n"));

    /* txpSeverityIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/a/w/e/R/d/h */
    tbl_idx->txpSeverityIndex = txpSeverityIndex_val;
    

    return MFD_SUCCESS;
} /* txpSeverityTable_indexes_set_tbl_idx */

/**
 * @internal
 * set row context indexes
 *
 * @param reqreq_ctx the row context that needs updated indexes
 *
 * @retval MFD_SUCCESS     : success.
 * @retval MFD_ERROR       : other error.
 *
 * @remark
 *  This function sets the mib indexs, then updates the oid indexs
 *  from the mib index.
 */
int txpSeverityTable_indexes_set(txpSeverityTable_rowreq_ctx *rowreq_ctx, long txpSeverityIndex_val)
{
    DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityTable_indexes_set","called\n"));

    if(MFD_SUCCESS != txpSeverityTable_indexes_set_tbl_idx(&rowreq_ctx->tbl_idx
                                   , txpSeverityIndex_val
           ))
        return MFD_ERROR;

    /*
     * convert mib index to oid index
     */
    rowreq_ctx->oid_idx.len = sizeof(rowreq_ctx->oid_tmp) / sizeof(oid);
    if(0 != txpSeverityTable_index_to_oid(&rowreq_ctx->oid_idx,
                                    &rowreq_ctx->tbl_idx)) {
        return MFD_ERROR;
    }

    return MFD_SUCCESS;
} /* txpSeverityTable_indexes_set */


/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityEol
 * txpSeverityEol is subid 2 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.2
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityEol data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityEol_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityEol_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityEol_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityEol_get","called\n"));

   /** we should have a non-NULL pointer */
	netsnmp_assert( NULL != txpSeverityEol_val_ptr );

	netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityEol data.
 * copy (* txpSeverityEol_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityEol_val_ptr ) = rowreq_ctx->data.txpSeverityEol;

    return MFD_SUCCESS;
} /* txpSeverityEol_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityModTemp
 * txpSeverityModTemp is subid 3 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.3
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityModTemp data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityModTemp_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityModTemp_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityModTemp_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityModTemp_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityModTemp_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityModTemp data.
 * copy (* txpSeverityModTemp_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityModTemp_val_ptr ) = rowreq_ctx->data.txpSeverityModTemp;

    return MFD_SUCCESS;
} /* txpSeverityModTemp_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityTxooa
 * txpSeverityTxooa is subid 4 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.4
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityTxooa data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityTxooa_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityTxooa_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityTxooa_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityTxooa_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityTxooa_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityTxooa data.
 * copy (* txpSeverityTxooa_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityTxooa_val_ptr ) = rowreq_ctx->data.txpSeverityTxooa;

    return MFD_SUCCESS;
} /* txpSeverityTxooa_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityTxLof
 * txpSeverityTxLof is subid 5 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.5
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityTxLof data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityTxLof_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityTxLof_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityTxLof_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityTxLof_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityTxLof_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityTxLof data.
 * copy (* txpSeverityTxLof_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityTxLof_val_ptr ) = rowreq_ctx->data.txpSeverityTxLof;

    return MFD_SUCCESS;
} /* txpSeverityTxLof_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityTxDsc
 * txpSeverityTxDsc is subid 6 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.6
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityTxDsc data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityTxDsc_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityTxDsc_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityTxDsc_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityTxDsc_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityTxDsc_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityTxDsc data.
 * copy (* txpSeverityTxDsc_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityTxDsc_val_ptr ) = rowreq_ctx->data.txpSeverityTxDsc;

    return MFD_SUCCESS;
} /* txpSeverityTxDsc_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityLsWav
 * txpSeverityLsWav is subid 7 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.7
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityLsWav data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityLsWav_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
txpSeverityLsWav_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityLsWav_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityLsWav_get","called\n"));
   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityLsWav_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityLsWav data.
 * copy (* txpSeverityLsWav_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityLsWav_val_ptr ) = rowreq_ctx->data.txpSeverityLsWav;

    return MFD_SUCCESS;
} /* txpSeverityLsWav_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityLsBias
 * txpSeverityLsBias is subid 8 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.8
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityLsBias data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityLsBias_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
txpSeverityLsBias_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityLsBias_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityLsBias_get","called\n"));

	/** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityLsBias_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityLsBias data.
 * copy (* txpSeverityLsBias_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityLsBias_val_ptr ) = rowreq_ctx->data.txpSeverityLsBias;

    return MFD_SUCCESS;
} /* txpSeverityLsBias_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityLsTemp
 * txpSeverityLsTemp is subid 9 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.9
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityLsTemp data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityLsTemp_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
txpSeverityLsTemp_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityLsTemp_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityLsTemp_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityLsTemp_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityLsTemp data.
 * copy (* txpSeverityLsTemp_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityLsTemp_val_ptr ) = rowreq_ctx->data.txpSeverityLsTemp;

    return MFD_SUCCESS;
} /* txpSeverityLsTemp_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityTxLock
 * txpSeverityTxLock is subid 10 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.10
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityTxLock data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityTxLock_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
txpSeverityTxLock_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityTxLock_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityTxLock_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityTxLock_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityTxLock data.
 * copy (* txpSeverityTxLock_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityTxLock_val_ptr ) = rowreq_ctx->data.txpSeverityTxLock;

    return MFD_SUCCESS;
} /* txpSeverityTxLock_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityLsPow
 * txpSeverityLsPow is subid 11 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.11
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityLsPow data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityLsPow_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityLsPow_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityLsPow_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityLsPow_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityLsPow_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityLsPow data.
 * copy (* txpSeverityLsPow_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityLsPow_val_ptr ) = rowreq_ctx->data.txpSeverityLsPow;

    return MFD_SUCCESS;
} /* txpSeverityLsPow_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityModBias
 * txpSeverityModBias is subid 12 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.12
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityModBias data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityModBias_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityModBias_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityModBias_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityModBias_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityModBias_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityModBias data.
 * copy (* txpSeverityModBias_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityModBias_val_ptr ) = rowreq_ctx->data.txpSeverityModBias;

    return MFD_SUCCESS;
} /* txpSeverityModBias_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityLatchedTxFifo
 * txpSeverityLatchedTxFifo is subid 13 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.13
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityLatchedTxFifo data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityLatchedTxFifo_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityLatchedTxFifo_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityLatchedTxFifo_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityLatchedTxFifo_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityLatchedTxFifo_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityLatchedTxFifo data.
 * copy (* txpSeverityLatchedTxFifo_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityLatchedTxFifo_val_ptr ) = rowreq_ctx->data.txpSeverityLatchedTxFifo;

    return MFD_SUCCESS;
} /* txpSeverityLatchedTxFifo_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityRxPow
 * txpSeverityRxPow is subid 14 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.14
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityRxPow data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityRxPow_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityRxPow_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityRxPow_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityRxPow_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityRxPow_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityRxPow data.
 * copy (* txpSeverityRxPow_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityRxPow_val_ptr ) = rowreq_ctx->data.txpSeverityRxPow;

    return MFD_SUCCESS;
} /* txpSeverityRxPow_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityRxLos
 * txpSeverityRxLos is subid 15 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.15
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityRxLos data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityRxLos_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
txpSeverityRxLos_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityRxLos_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityRxLos_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityRxLos_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityRxLos data.
 * copy (* txpSeverityRxLos_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityRxLos_val_ptr ) = rowreq_ctx->data.txpSeverityRxLos;

    return MFD_SUCCESS;
} /* txpSeverityRxLos_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityRxLock
 * txpSeverityRxLock is subid 16 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.16
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityRxLock data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityRxLock_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityRxLock_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityRxLock_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityRxLock_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityRxLock_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityRxLock data.
 * copy (* txpSeverityRxLock_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityRxLock_val_ptr ) = rowreq_ctx->data.txpSeverityRxLock;

    return MFD_SUCCESS;
} /* txpSeverityRxLock_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityRxs
 * txpSeverityRxs is subid 17 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.17
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityRxs data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityRxs_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int
txpSeverityRxs_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityRxs_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityRxs_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityRxs_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityRxs data.
 * copy (* txpSeverityRxs_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityRxs_val_ptr ) = rowreq_ctx->data.txpSeverityRxs;

    return MFD_SUCCESS;
} /* txpSeverityRxs_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityPrbsErr
 * txpSeverityPrbsErr is subid 18 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.18
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityPrbsErr data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityPrbsErr_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityPrbsErr_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityPrbsErr_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityPrbsErr_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityPrbsErr_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityPrbsErr data.
 * copy (* txpSeverityPrbsErr_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityPrbsErr_val_ptr ) = rowreq_ctx->data.txpSeverityPrbsErr;

    return MFD_SUCCESS;
} /* txpSeverityPrbsErr_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityPsummary
 * txpSeverityPsummary is subid 19 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.19
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityPsummary data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityPsummary_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityPsummary_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityPsummary_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityPsummary_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityPsummary_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityPsummary data.
 * copy (* txpSeverityPsummary_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityPsummary_val_ptr ) = rowreq_ctx->data.txpSeverityPsummary;

    return MFD_SUCCESS;
} /* txpSeverityPsummary_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityP5vAnalog
 * txpSeverityP5vAnalog is subid 20 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.20
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityP5vAnalog data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityP5vAnalog_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityP5vAnalog_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityP5vAnalog_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityP5vAnalog_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityP5vAnalog_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityP5vAnalog data.
 * copy (* txpSeverityP5vAnalog_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityP5vAnalog_val_ptr ) = rowreq_ctx->data.txpSeverityP5vAnalog;

    return MFD_SUCCESS;
} /* txpSeverityP5vAnalog_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityN5v2Analog
 * txpSeverityN5v2Analog is subid 21 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.21
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityN5v2Analog data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityN5v2Analog_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityN5v2Analog_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityN5v2Analog_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityN5v2Analog_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityN5v2Analog_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityN5v2Analog data.
 * copy (* txpSeverityN5v2Analog_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityN5v2Analog_val_ptr ) = rowreq_ctx->data.txpSeverityN5v2Analog;

    return MFD_SUCCESS;
} /* txpSeverityN5v2Analog_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityP3p3vAnalog
 * txpSeverityP3p3vAnalog is subid 22 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.22
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityP3p3vAnalog data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityP3p3vAnalog_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityP3p3vAnalog_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityP3p3vAnalog_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityP3p3vAnalog_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityP3p3vAnalog_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityP3p3vAnalog data.
 * copy (* txpSeverityP3p3vAnalog_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityP3p3vAnalog_val_ptr ) = rowreq_ctx->data.txpSeverityP3p3vAnalog;

    return MFD_SUCCESS;
} /* txpSeverityP3p3vAnalog_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityP3p3vDigital
 * txpSeverityP3p3vDigital is subid 23 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.23
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityP3p3vDigital data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityP3p3vDigital_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityP3p3vDigital_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityP3p3vDigital_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityP3p3vDigital_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityP3p3vDigital_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityP3p3vDigital data.
 * copy (* txpSeverityP3p3vDigital_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityP3p3vDigital_val_ptr ) = rowreq_ctx->data.txpSeverityP3p3vDigital;

    return MFD_SUCCESS;
} /* txpSeverityP3p3vDigital_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityLvDigital
 * txpSeverityLvDigital is subid 24 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.24
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityLvDigital data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityLvDigital_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityLvDigital_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityLvDigital_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityLvDigital_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityLvDigital_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityLvDigital data.
 * copy (* txpSeverityLvDigital_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityLvDigital_val_ptr ) = rowreq_ctx->data.txpSeverityLvDigital;

    return MFD_SUCCESS;
} /* txpSeverityLvDigital_get */

/*---------------------------------------------------------------------
 * FTNC-MIB::txpSeverityEntry.txpSeverityN5p2vDigital
 * txpSeverityN5p2vDigital is subid 25 of txpSeverityEntry.
 * Its status is Current, and its access level is ReadWrite.
 * OID: .1.3.6.1.4.1.43484.1.1.3.4.1.1.25
 * Description:
alarm severity
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   1
 *
 *
 * Its syntax is INTEGER32 (based on perltype INTEGER32)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/**
 * Extract the current value of the txpSeverityN5p2vDigital data.
 *
 * Set a value using the data context for the row.
 *
 * @param rowreq_ctx
 *        Pointer to the row request context.
 * @param txpSeverityN5p2vDigital_val_ptr
 *        Pointer to storage for a long variable
 *
 * @retval MFD_SUCCESS         : success
 * @retval MFD_SKIP            : skip this node (no value for now)
 * @retval MFD_ERROR           : Any other error
 */
int txpSeverityN5p2vDigital_get( txpSeverityTable_rowreq_ctx *rowreq_ctx, long * txpSeverityN5p2vDigital_val_ptr )
{
	DEBUGMSGTL(("verbose:txpSeverityTable:txpSeverityN5p2vDigital_get","called\n"));

   /** we should have a non-NULL pointer */
   netsnmp_assert( NULL != txpSeverityN5p2vDigital_val_ptr );

   netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:231:o: |-> Extract the current value of the txpSeverityN5p2vDigital data.
 * copy (* txpSeverityN5p2vDigital_val_ptr ) from rowreq_ctx->data
 */
    (* txpSeverityN5p2vDigital_val_ptr ) = rowreq_ctx->data.txpSeverityN5p2vDigital;

    return MFD_SUCCESS;
} /* txpSeverityN5p2vDigital_get */

/** @} */
